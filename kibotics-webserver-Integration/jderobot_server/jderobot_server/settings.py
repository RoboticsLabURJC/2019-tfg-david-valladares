# -*- coding: utf-8 -*-

"""
Django settings for jderobot_server project.

Generated by 'django-admin startproject' using Django 1.9.

For more information on this file, see
https://docs.djangoproject.com/en/1.9/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.9/ref/settings/
"""

import os
from github import Github

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# ------------------------------------- DIRECTORIOS -------------------------------------------

# Exercises Directory
EXERCISES_DIR = os.path.join(BASE_DIR, 'exercises')

# Drivers Directory
DRIVERS_DIR = os.path.join(BASE_DIR, 'kibotics-drivers')

# Users Local Directory
USERS_LOCAL_DIR = os.path.join(BASE_DIR, 'users')

# GitHub Users Directroy
GITHUB_USERS_DIR = '/users/'

# Certificates Directorty
CERTS_DIR = '/.certs/kibotics.org/'

# Volume associated to ARM container (obfuscate)
ARM_DIR = os.path.join(BASE_DIR, 'static/download')
ARM_DIR_PROD = os.path.abspath('/var/www/kibotics-statics/download')

# ------------------------------------- DIRECTORIOS -------------------------------------------


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.9/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'c$a+p1i=zzj9*vl$=78o9wr#x^k@xyzhm+d@#w1am457*26jkn'

GITHUB_WEBHOOK_KEY ="PYZUuCetkX3PCDqQid1aMO127r5g57F9TqkbcNPJLsYTVEtLL6"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_DEPLOY_HOSTS = [
    '192.30.252.','185.199.108.','140.82.112.','13.229.188.59', # github
    '193.147.79.194', '193.147.79.190', '193.147.79.200', #jderobot (chica, pares, papageno)
    '127.0.0.1']

ALLOWED_HOSTS = ['*']

ADMINS = (('Carlos Awadallah', 'carlosawadallah@gmail.com'), ('Sergio Paniego', 'sergiopaniegoblanco@gmail.com'))

# Cambia el modelo de usuario por defecto por el un modelo
# que hemos extendido para la aplicación.
# Location: jderobot_kids.models.py
AUTH_USER_MODEL = 'jderobot_kids.User'

#SESSION_EXPIRE_AT_BROWSER_CLOSE = True
#SESSION_COOKIE_AGE = 20 * 60 # Logout users after 20 min of inactivity

# Application definition
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'channels',
    'jderobot_kids',
    'django_extensions',
    'taggit_autosuggest',
    'taggit',
    'django_elasticsearch_dsl',
    'online_users',
    'UploadArduino',
]

ELASTICSEARCH_DSL = {
    'default': {
        'hosts': 'localhost:9200'
    },
}

MIDDLEWARE_CLASSES = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'online_users.middleware.OnlineNowMiddleware',
]

ROOT_URLCONF = 'jderobot_server.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [EXERCISES_DIR],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'django.template.context_processors.i18n', # Internacionalizacion
            ],
        },
    },
]

WSGI_APPLICATION = 'jderobot_server.wsgi.application'


# Database
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': "kibotics",
        'USER': "kidsapp",
        'PASSWORD': "robotica2018",
        'HOST' : "localhost",
        'PORT': "3306",
    }
}


# Password validation
# https://docs.djangoproject.com/en/1.9/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

AUTHENTICATION_BACKENDS = ['django.contrib.auth.backends.AllowAllUsersModelBackend']

# Internationalization
# https://docs.djangoproject.com/en/1.9/topics/i18n/

LANGUAGE_CODE = 'es-Es'

LOCALE_PATHS = (
    os.path.join(BASE_DIR, 'locale'),
)

from django.utils.translation import ugettext_lazy as _
LANGUAGES = (
    ('es', _('Spanish')), #('es-es', _('Spanish')),
    ('en', _('English')), #('en-us', _('English')),
)


TIME_ZONE = 'Europe/Madrid'

USE_I18N = True

USE_L10N = True

USE_TZ = True


LOGIN_URL = "/login/"

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.9/howto/static-files/

STATIC_URL = '/static/'

STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static'),
    EXERCISES_DIR,
    os.path.join(DRIVERS_DIR, 'tello/proxy'),
]

STATIC_ROOT = os.path.abspath('/var/www/kibotics-statics')

STATICFILES_FINDERS_IGNORE = [
    '*.ipynb',
    'templates',
    'info.json',
    'JdeRobotKids.yml',
]

STATICFILES_FINDERS = (
    'jderobot_server.finders.FileSystemFinderIgnore',
    'jderobot_server.finders.AppDirectoriesFinderIgnore',
)

# Media root es usado para subir archivos.
MEDIA_ROOT = os.path.join(BASE_DIR, 'users')
MEDIA_URL = '/users/'

# Servicio de Correo Electrónico
# Simulador de servicio de Email a través de la consola para su uso solamente en Desarrollo
# EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'  # During development only

# Configruación del servicio de Correo Electrónico SMTP de la aplicación a través de la dirección
# de correo de la aplicación para el envió del mail confirmación en el registro de usuarios y para
# la recuperación de contraseña de los usuarios.

EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_HOST_USER = 'kibotics@gmail.com'
EMAIL_HOST_PASSWORD = 'Kibotics-2016'
EMAIL_USE_TLS = True
DEFAULT_FROM_EMAIL = 'Kibotics App'

# ------------------------------- GITHUB API ---------------------------------------------------------

GITHUB_REPOSITORY = "kibotics-users"

GITHUB_TOKEN = Github('1e2b3121ad992b421d5459fb059f50e42d481eab')
GITHUB_USER = GITHUB_TOKEN.get_user()
REPOSITORY = GITHUB_USER.get_repo(GITHUB_REPOSITORY)
WEBSERVER_REPOSITORY = GITHUB_USER.get_repo("kibotics-webserver")


# CHANNELS - Módulo para WebSockets.

CHANNEL_LAYERS = {
    "default": {
        "BACKEND": "asgi_redis.RedisChannelLayer",
        "CONFIG": {
            "hosts": [("127.0.0.1", 6379), ("0.0.0.0", 6379), ("*", 6379)],
        },
        "ROUTING": "jderobot_server.routing.channel_routing",
    },
}

# Redirect all LOGS to STDERR, STDOUT (to use along with Docker)
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler'
        },
    },
    'loggers': {
        '': {  # 'catch all' loggers by referencing it with the empty string
            'handlers': ['console'],
            'level': 'DEBUG',
        },
    },
}
